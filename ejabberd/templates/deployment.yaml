apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ejabberd.fullname" . }}
  labels:
    {{- include "ejabberd.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ejabberd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ejabberd.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ejabberd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejabberd.fullname" . }}-jwt-key
                  key: jwt-key
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejabberd.fullname" . }}-admin
                  key: admin-user
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejabberd.fullname" . }}-admin
                  key: admin-password
            - name: API_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejabberd.fullname" . }}-admin
                  key: api-user
            - name: API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejabberd.fullname" . }}-admin
                  key: api-password
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Wait for ejabberd to be ready
                    echo "Waiting for ejabberd to start before creating admin user..."
                    while ! /opt/ejabberd/bin/ejabberdctl status > /dev/null 2>&1; do
                      sleep 5
                    done

                    # Create admin user if it does not exist
                    if /opt/ejabberd/bin/ejabberdctl check_account "$ADMIN_USER" ejabberd.local > /dev/null 2>&1; then
                      echo "Admin user already exists."
                    else
                      echo "Creating admin user..."
                      /opt/ejabberd/bin/ejabberdctl register "$ADMIN_USER" ejabberd.local "$ADMIN_PASSWORD"
                    fi

                    # Create API user if it does not exist
                    if /opt/ejabberd/bin/ejabberdctl check_account "$API_USER" ejabberd.local > /dev/null 2>&1; then
                      echo "API user already exists."
                    else
                      echo "Creating API service account..."
                      /opt/ejabberd/bin/ejabberdctl register "$API_USER" ejabberd.local "$API_PASSWORD"
                    fi

                    echo "Admin user setup complete."
          ports:
            {{- if .Values.service.ports }}
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
            {{- else }}
            - name: xmpp-client
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: ejabberd-config
              mountPath: /opt/ejabberd/conf/ejabberd.yml
              subPath: ejabberd.yml
              readOnly: true
            - name: jwt-secret
              mountPath: /opt/ejabberd/conf/jwt-key
              subPath: jwt-key
              readOnly: true
            - name: ejabberd-data
              mountPath: /opt/ejabberd/database
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: ejabberd-config
          configMap:
            name: {{ include "ejabberd.fullname" . }}-config
        - name: jwt-secret
          secret:
            secretName: {{ include "ejabberd.fullname" . }}-jwt-key
        - name: ejabberd-data
          emptyDir: {}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
