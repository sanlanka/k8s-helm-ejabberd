apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ejabberd.fullname" . }}-config
  labels:
    {{- include "ejabberd.labels" . | nindent 4 }}
data:
  ejabberd.yml: |
    ###
    ### ejabberd configuration file
    ### Generated by Helm Chart
    ###

    ## Host configuration
    hosts:
      - {{ include "ejabberd.domain" . | quote }}

    ## Listening ports
    listen:
      ## XMPP client-to-server (c2s)
      - port: {{ .Values.service.xmpp.port }}
        ip: "::"
        module: ejabberd_c2s
        max_stanza_size: {{ .Values.ejabberd.listen.c2s.max_stanza_size | default 65536 }}
        shaper: {{ .Values.ejabberd.listen.c2s.shaper | default "c2s_shaper" }}
        access: {{ .Values.ejabberd.listen.c2s.access | default "c2s" }}
        starttls: true
        starttls_required: false

      ## XMPP server-to-server (s2s)
      - port: {{ .Values.service.xmpps2s.port }}
        ip: "::"
        module: ejabberd_s2s_in
        max_stanza_size: {{ .Values.ejabberd.listen.s2s.max_stanza_size | default 131072 }}

      ## HTTP services
      - port: {{ .Values.service.http.port }}
        ip: "::"
        module: ejabberd_http
        request_handlers:
          "/api": mod_http_api
          "/admin": ejabberd_web_admin
          "/upload": mod_http_upload
          "/ws": ejabberd_http_ws
          "/oauth": ejabberd_oauth
          "/.well-known/host-meta": mod_host_meta
          "/.well-known/host-meta.json": mod_host_meta

      {{- if .Values.ejabberd.tls.enabled }}
      ## HTTPS services
      - port: {{ .Values.service.https.port }}
        ip: "::"
        module: ejabberd_http
        tls: true
        request_handlers:
          "/api": mod_http_api
          "/admin": ejabberd_web_admin
          "/upload": mod_http_upload
          "/ws": ejabberd_http_ws
          "/oauth": ejabberd_oauth
          "/.well-known/host-meta": mod_host_meta
          "/.well-known/host-meta.json": mod_host_meta
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_mqtt.enabled }}
      ## MQTT
      - port: {{ .Values.service.mqtt.port }}
        ip: "::"
        module: mod_mqtt
        {{- if .Values.ejabberd.tls.enabled }}

      ## MQTT over TLS
      - port: {{ .Values.service.mqtts.port }}
        ip: "::"
        module: mod_mqtt
        tls: true
        {{- end }}
      {{- end }}

    ## Authentication
    auth_method:
      {{- if .Values.ejabberd.auth.methods.internal.enabled }}
      - internal
      {{- end }}
      {{- if .Values.ejabberd.auth.methods.jwt.enabled }}
      - jwt
      {{- end }}
      {{- if .Values.ejabberd.auth.methods.ldap.enabled }}
      - ldap
      {{- end }}
      {{- if .Values.ejabberd.auth.methods.sql.enabled }}
      - sql
      {{- end }}
      {{- if .Values.ejabberd.auth.methods.external.enabled }}
      - external
      {{- end }}
      {{- if .Values.ejabberd.auth.methods.anonymous.enabled }}
      - anonymous
      {{- end }}

    {{- if .Values.ejabberd.auth.methods.jwt.enabled }}
    ## JWT configuration
    jwt_key: {{ .Values.ejabberd.auth.methods.jwt.key | quote }}
    jwt_auth_only_rule: jwt_only
    {{- end }}

    {{- if .Values.ejabberd.auth.methods.ldap.enabled }}
    ## LDAP configuration
    ldap_servers:
      {{- range .Values.ejabberd.auth.methods.ldap.servers }}
      - {{ . | quote }}
      {{- end }}
    ldap_port: {{ .Values.ejabberd.auth.methods.ldap.port }}
    ldap_bind_dn: {{ .Values.ejabberd.auth.methods.ldap.bind_dn | quote }}
    ldap_bind_password: {{ .Values.ejabberd.auth.methods.ldap.bind_password | quote }}
    ldap_base: {{ .Values.ejabberd.auth.methods.ldap.base | quote }}
    ldap_filter: {{ .Values.ejabberd.auth.methods.ldap.filter | quote }}
    {{- if .Values.ejabberd.auth.methods.ldap.tls }}
    ldap_encrypt: tls
    {{- end }}
    {{- end }}

    {{- if .Values.ejabberd.auth.methods.sql.enabled }}
    ## SQL configuration for authentication
    sql_type: {{ .Values.ejabberd.auth.methods.sql.type }}
    sql_server: {{ .Values.ejabberd.auth.methods.sql.server | quote }}
    sql_port: {{ .Values.ejabberd.auth.methods.sql.port }}
    sql_database: {{ .Values.ejabberd.auth.methods.sql.database | quote }}
    sql_username: {{ .Values.ejabberd.auth.methods.sql.username | quote }}
    sql_password: {{ .Values.ejabberd.auth.methods.sql.password | quote }}
    {{- end }}

    ## Database configuration
    {{- if eq .Values.ejabberd.database.type "sql" }}
    default_db: sql
    sql_type: {{ .Values.ejabberd.database.sql.type }}
    sql_server: {{ .Values.ejabberd.database.sql.server | quote }}
    sql_port: {{ .Values.ejabberd.database.sql.port }}
    sql_database: {{ .Values.ejabberd.database.sql.database | quote }}
    sql_username: {{ .Values.ejabberd.database.sql.username | quote }}
    sql_password: {{ .Values.ejabberd.database.sql.password | quote }}
    sql_pool_size: {{ .Values.ejabberd.database.sql.pool_size }}
    sql_keepalive_interval: {{ .Values.ejabberd.database.sql.keepalive_interval }}
    {{- else }}
    default_db: mnesia
    {{- end }}

    ## TLS configuration
    {{- if .Values.ejabberd.tls.enabled }}
    certfiles:
      - {{ .Values.ejabberd.tls.certfile | quote }}
    {{- end }}

    ## Access Control Lists (ACL)
    acl:
      {{- if .Values.ejabberd.acl.local }}
      local:
        user_regexp: {{ .Values.ejabberd.acl.local.user_regexp | quote }}
      {{- end }}
      admin:
        user:
          {{- range .Values.ejabberd.admins }}
          - {{ . | quote }}
          {{- end }}

    ## Access rules
    access_rules:
      local:
        - allow: local
      c2s:
        - deny: blocked
        - allow: all
      announce:
        - allow: admin
      configure:
        - allow: admin
      muc_create:
        - allow: local
      muc_admin:
        - allow: admin
      pubsub_createnode:
        - allow: local
      register:
        - allow: all
      {{- if .Values.ejabberd.auth.methods.jwt.enabled }}
      jwt_only:
        - allow: all
      {{- end }}

    ## API permissions
    api_permissions:
      "console commands":
        from:
          - ejabberd_ctl
        who: all
        what: "*"
      "admin access":
        who:
          - access:
              - allow:
                {{- range .Values.ejabberd.admins }}
                - user: {{ . | quote }}
                {{- end }}
        what:
          - "*"
          - "!stop"
          - "!start"
      "public commands":
        who:
          - ip: "127.0.0.1/8"
          - ip: "::1/128"
          - ip: "10.0.0.0/8"
          - ip: "172.16.0.0/12"
          - ip: "192.168.0.0/16"
        what:
          - "status"
          - "connected_users_number"
          - "stats"
          - "stats_host"

    ## Shaper configuration
    shaper:
      normal: {{ .Values.ejabberd.shapers.normal | default 1000 }}
      fast: {{ .Values.ejabberd.shapers.fast | default 50000 }}

    shaper_rules:
      max_user_sessions: 10
      max_user_offline_messages:
        - 5000: admin
        - 100: all
      c2s_shaper:
        - none: admin
        - normal: all
      s2s_shaper: fast

    ## Modules
    modules:
      {{- if .Values.ejabberd.modules.mod_roster.enabled }}
      mod_roster:
        {{- if .Values.ejabberd.modules.mod_roster.versioning }}
        versioning: true
        {{- end }}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_vcard.enabled }}
      mod_vcard:
        search: false
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_private.enabled }}
      mod_private: {}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_disco.enabled }}
      mod_disco: {}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_register.enabled }}
      mod_register:
        access: {{ .Values.ejabberd.modules.mod_register.access | default "register" }}
        {{- if .Values.ejabberd.modules.mod_register.registration_watchers }}
        registration_watchers:
          {{- range .Values.ejabberd.modules.mod_register.registration_watchers }}
          - {{ . | quote }}
          {{- end }}
        {{- end }}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_offline.enabled }}
      mod_offline:
        access_max_user_messages: {{ .Values.ejabberd.modules.mod_offline.access_max_user_messages | default "max_user_offline_messages" }}
        store_empty_body: unless_chat_state
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_mam.enabled }}
      mod_mam:
        default: always
        {{- if .Values.ejabberd.modules.mod_mam.compress_xml }}
        compress_xml: true
        {{- end }}
        cache_size: 1000
        cache_life_time: 300
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_muc.enabled }}
      mod_muc:
        access: {{ .Values.ejabberd.modules.mod_muc.access | default "muc" }}
        access_admin: {{ .Values.ejabberd.modules.mod_muc.access_admin | default "muc_admin" }}
        access_create: {{ .Values.ejabberd.modules.mod_muc.access_create | default "muc_create" }}
        access_persistent: {{ .Values.ejabberd.modules.mod_muc.access_persistent | default "muc_create" }}
        history_size: 20
        max_users: 200
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_pubsub.enabled }}
      mod_pubsub:
        access_createnode: {{ .Values.ejabberd.modules.mod_pubsub.access_createnode | default "pubsub_createnode" }}
        plugins:
          - "flat"
          - "pep"
        force_node_config:
          "eu.siacs.conversations.axolotl.devicelist":
            access_model: open
          "eu.siacs.conversations.axolotl.bundles":
            access_model: open
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_push.enabled }}
      mod_push:
        include_sender: true
        include_body: "Hello!"
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_stream_mgmt.enabled }}
      mod_stream_mgmt:
        resend_on_timeout: {{ .Values.ejabberd.modules.mod_stream_mgmt.resend_on_timeout | default "if_offline" }}
        ack_timeout: 60
        resume_timeout: 600
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_http_upload.enabled }}
      mod_http_upload:
        put_url: {{ .Values.ejabberd.modules.mod_http_upload.put_url | quote }}
        get_url: {{ .Values.ejabberd.modules.mod_http_upload.get_url | quote }}
        max_size: {{ .Values.ejabberd.modules.mod_http_upload.max_size | default 104857600 }}
        thumbnail: false
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_stats.enabled }}
      mod_stats: {}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_configure.enabled }}
      mod_configure: {}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_http_api.enabled }}
      mod_http_api: {}
      {{- end }}

      {{- if .Values.ejabberd.modules.mod_mqtt.enabled }}
      mod_mqtt:
        access_subscribe: {{ .Values.ejabberd.modules.mod_mqtt.access_subscribe | default "all" }}
        access_publish: {{ .Values.ejabberd.modules.mod_mqtt.access_publish | default "all" }}
      {{- end }}

      ## Always enabled core modules
      mod_adhoc: {}
      mod_admin_extra: {}
      mod_announce:
        access: announce
      mod_blocking: {}
      mod_caps: {}
      mod_client_state: {}
      mod_ping: {}
      mod_time: {}
      mod_version:
        show_os: false 