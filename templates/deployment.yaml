apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ejabberd.fullname" . }}
  labels:
    {{- include "ejabberd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "ejabberd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ejabberd.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ejabberd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: xmpp-c2s
              containerPort: {{ .Values.service.xmpp.targetPort }}
              protocol: TCP
            - name: xmpp-s2s
              containerPort: {{ .Values.service.xmpps2s.targetPort }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.service.http.targetPort }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.service.https.targetPort }}
              protocol: TCP
            {{- if .Values.ejabberd.modules.mod_mqtt.enabled }}
            - name: mqtt
              containerPort: {{ .Values.service.mqtt.targetPort }}
              protocol: TCP
            - name: mqtts
              containerPort: {{ .Values.service.mqtts.targetPort }}
              protocol: TCP
            {{- end }}
          env:
            - name: EJABBERD_DOMAIN
              value: {{ include "ejabberd.domain" . | quote }}
            - name: EJABBERD_ADMIN_USER
              value: {{ (split "@" (index .Values.ejabberd.admins 0))._0 | quote }}
            - name: EJABBERD_ADMIN_PASSWORD
              value: "admin123"  # This will be overridden by init scripts
            {{- if .Values.ejabberd.auth.methods.jwt.enabled }}
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "ejabberd.fullname" . }}-secrets
                  key: jwt-key
            {{- end }}
            {{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /api/status
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /api/status
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /opt/ejabberd/conf/ejabberd.yml
              subPath: ejabberd.yml
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /opt/ejabberd/database
            {{- end }}
            {{- if .Values.ejabberd.tls.custom_cert.enabled }}
            - name: tls-certs
              mountPath: /opt/ejabberd/conf/certs
              readOnly: true
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{- toYaml .Values.sidecars | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "ejabberd.fullname" . }}-config
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ejabberd.pvcName" . }}
        {{- end }}
        {{- if .Values.ejabberd.tls.custom_cert.enabled }}
        - name: tls-certs
          secret:
            secretName: {{ include "ejabberd.fullname" . }}-tls
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 